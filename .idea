Numbers will go to their Levels
Script not sorting list: lsort > level sort > just define level for numbers
I will use builting sort function to sort level keys


_llevels = {
    -------------------------------------
    'len(n):level(n)'   | list(n)
    -------------------------------------
    target              | [0, 5, 7, 8, 2, 1, 1, 3]
    '1:0'               | [0, 5, 7, 8, 2, 1, 1, 3]
    -------------------------------------
    target              | [84, 51, 98, 61, 79]
    '2:5'               | [1]
    .....               | ...
    '2:9'               | [8]
    -------------------------------------
    target              | [456, 579, 177, 879, 996, 990]
    '3:17'              | [7]
    ......              | ...
    '3:99'              | [6, 0]
    ------------------------------------
}


IDEA FROM:
    GRAVITY AND FALLING OBJECTS
--------------------------------- LSORT ---------------------------------
1, 8, 2, 3, 10, 4, 7, 5, 6, 22, 13  |  0level: len(n) == 1
----------------------------------  |  -------------------
1level-------0...................3  |  1level: len(n) == 2 and startswith 1: 10, 11 ...
2level-----------------------2----  |  2level: len(n) == 2 and startswith 2: 20, 21 ...


0level: (n)     > 1, 2, 3, 4, 5, 6, 7, 8  | 0 + n
1level: (0, 3)  > 10, 13                  | 1 + 0, 1 + 3
2level: (2)     > 22                      | 2 + 2


----------------------------------
ALL LEVELS HAVE NUMBERS 0 ... 9
I CAN MAKE LINK TO EXIST LEVEL WITH NUMBERS 0 ... 9 > "T" > True
EXP, if i have numbers from 0 to 20:
_link = list(range(10))

levels = {
    '1:0': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]  # 0 + 0 = 0
    '1:1': ["T"]  <  ["T"] if not set([1, 8, 9, 7, 6, 2, 0, 5, 3, 4]) ^ set(_link)
    '1:2': ["T"]
}
levels['len(n):str(n)[:-1]'][0]  > "T" < linked to list *_link*


+-------+-------------------------------------------------------+
| steps | actions                                               |
----------------------------------------------------------------+
| s1:     list: [0 .... 857942] max key == '6:85794'            |
|         input n = 856                                         |
+---------------------------------------------------------------+
| s2:     length(n) = str(3)                                    |
|         level = str(n)[:-1] = '85'                            |
|         found key '3:85' < length:level                       |
+---------------------------------------------------------------+
| s4:     new_n = str(n)[-1] = int('6')                         |
|         append to key: levels['3:85'].append(new_n)           |
+---------------------------------------------------------------+

>>> print(levels['3:85'])
[4, 1, 5, 8, 0, 6] -> 6 <- new_n
